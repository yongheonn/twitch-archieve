<!DOCTYPE html>
<html>
  <head>
    <title>youtube archieve</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
  </head>
  <body>
    <% for(var streamer of streamerIds){ %>
    <h2>
      <%= streamer %><button
        style="margin-left: 30px"
        onclick="onClickDelete('<%= streamer %>')"
      >
        삭제
      </button>
    </h2>

    <% for(var vidId in info[streamer]) { var vidInfo = info[streamer][vidId] %>
    <h3><%= vidId %></h3>
    <br />
    <span>제목: <%= vidInfo.title %></span>
    <br />
    <span>게임: <%= vidInfo.game %></span>
    <br />
    <span>화질: <%= vidInfo.quality %></span>
    <br />
    <span>상태: <%= statusMessage[vidInfo.status]%></span>
    <br /><br />
    <% } }%>
    <span>스트리머</span>
    <input type="text" id="addStreamer" value="" />
    <button onclick="onClickAdd()">추가</button>
    <br />
    <span>error count: <%= errorCount%></span>
    <br />
    <% const utc = resetTime.getTime() + resetTime.getTimezoneOffset() * 60 *
    1000; const KR_TIME_DIFF = 9 * 60 * 60 * 1000; const kr_curr = new Date(utc
    + KR_TIME_DIFF); %>
    <span>유튜브 리셋 시간: <%= kr_curr.toLocaleString()%></span>
    <br />
    <input type="text" id="exceptGames" value="<%= exceptGames%>" />
    <button onclick="onClickHandler()">변경 저장</button>
    <input id="info" value="<%= info%>" hidden />
    <input id="InfoStatus" value="<%= InfoStatus%>" hidden />
  </body>
  <script>
    const info = document.getElementById("info").value;
    const InfoStatus = document.getElementById("InfoStatus").value;
    const option = {
      method: "POST",
      body: "",
      headers: {
        "Content-Type": "application/json",
      },
    };

    async function onClickAdd() {
      const addedStreamer = document.getElementById("addStreamer").value;
      option.body = JSON.stringify({ addedStreamer });
      const response = await fetch("/add_streamer", option);
      if (response.status === 200) {
        alert("성공");
        location.reload();
      } else {
        alert("오류 발생");
      }
    }

    async function onClickHandler() {
      const exceptGames = document.getElementById("exceptGames").value;
      option.body = JSON.stringify({ exceptGames });
      const response = await fetch("/except_games", option);
      if (response.status === 200) {
        alert("성공");
      } else {
        alert("오류 발생");
      }
    }

    async function onClickDelete(streamer) {
      for (const vidId in info[streamer]) {
        if (
          info[streamer][vidId].status === InfoStatus.UPLOADING ||
          info[streamer][vidId].status === InfoStatus.MERGING
        ) {
          alert("업로딩이나 처리 과정이 끝난 후에 시도해주세요.");
          return;
        }
      }
      option.body = JSON.stringify({ streamer });
      const response = await fetch("/delete_streamer", option);
      if (response.status === 200) {
        alert("성공");
        location.reload();
      } else {
        alert("오류 발생");
      }
    }
  </script>
</html>
